on:
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      repo:
        type: string
      arch:
        type: string
        default: "amd64"
      node_type:
        type: string
        default: "cpu8"
      container_image:
        type: string
        default: "rapidsai/ci:latest"
      run_script:
        required: true
        type: string

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on:
      - self-hosted
      - linux
      - ${{ inputs.arch }}
      - ${{ inputs.node_type }}
    container:
      image: ${{ inputs.container_image }}
      env:
        RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
        AWS_ACCESS_KEY_ID: ${{ secrets.RAPIDSAI_GHA_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.RAPIDSAI_GHA_AWS_SECRET_ACCESS_KEY }}
        PARALLEL_LEVEL: ${{ env.PARALLEL_LEVEL }}
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.sha }}
          fetch-depth: 0
      - name: Standardize repository information
        run: |
          echo "RAPIDS_REPOSITORY=${{ inputs.repo || github.repository }}" >> "${GITHUB_ENV}"
          echo "RAPIDS_SHA=$(git rev-parse HEAD)" >> "${GITHUB_ENV}"
          echo "RAPIDS_REF_NAME=${{ inputs.branch || github.ref_name }}" >> "${GITHUB_ENV}"
          echo "RAPIDS_NIGHTLY_DATE=${{ inputs.date }}" >> "${GITHUB_ENV}"
      - name: Install pypa/build
        run: |
          python -m pip install build --user
      - name: Set up environment variables
        run: |
          # While conda provides these during conda-build, they are also necessary during
          # the setup.py build for PyPI
          echo "GIT_DESCRIBE_TAG=`git describe --abbrev=0 --tags`" >> $GITHUB_ENV
          echo "GIT_DESCRIBE_NUMBER=`git rev-list ${GIT_DESCRIBE_TAG}..HEAD --count`" >> $GITHUB_ENV
          if nightly (not release):
            echo "VERSION_SUFFIX=`date +%y%m%d`" >> $GITHUB_ENV
      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/ .
      - name: Publish distribution ðŸ“¦ to PyPI
        if: inputs.build_type == 'branch'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.RAPIDSAI_PYPI_TOKEN }}